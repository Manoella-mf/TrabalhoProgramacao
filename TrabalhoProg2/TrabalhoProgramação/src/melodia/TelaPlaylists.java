/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package melodia;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import model.Playlist;
import model.RecipienteDeMensagem;
import java.sql.Connection;
import dao.ManterPlaylist;

/**
 *
 * @author manu
 */
public class TelaPlaylists extends javax.swing.JFrame implements RecipienteDeMensagem{

    private static Connection play = null;
    static int codigo;
    private static ArrayList<Playlist> playlists = new ArrayList();
    
     public static ArrayList<Playlist> getAlbuns(){
        
        return playlists;
     }
    /**
     * Creates new form TelaPerfil
     */
    public TelaPlaylists(int codigo) {
        this.codigo = codigo;
        initComponents();
        apresentaPlaylists();
    }
    public void apresentaPlaylists(){
        
        for(Playlist pl : playlists) {
            txtPlaylist.append(pl.toString()+"\n");
            cbPlaylists.addItem(pl.getNome());
            if (pl.getMusica() != null){
                txtMusicas.append(pl.getMusica().toString()+"\n");
            }
        }
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMusicas = new javax.swing.JTextArea();
        txtNovaPlaylist = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbPlaylists = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPlaylist = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtMusicas.setEditable(false);
        txtMusicas.setColumns(20);
        txtMusicas.setRows(5);
        jScrollPane1.setViewportView(txtMusicas);

        txtNovaPlaylist.setToolTipText("Insira um nome para criar uma playlist");
        txtNovaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNovaPlaylistActionPerformed(evt);
            }
        });

        jButton1.setText("Adicionar Playlist");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaPlaylistActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(66, 66, 66));
        jLabel1.setText("Playlists");

        txtPlaylist.setEditable(false);
        txtPlaylist.setColumns(20);
        txtPlaylist.setRows(5);
        jScrollPane2.setViewportView(txtPlaylist);

        jLabel2.setText("Selecione a playlist:");

        jLabel3.setText("MÃºsicas da playlist");

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPlaylist(evt);
            }
        });

        jButton3.setText("Alterar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNovaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(109, 109, 109)
                            .addComponent(jButton3))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cbPlaylists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jButton2))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbPlaylists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNovaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNovaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNovaPlaylistActionPerformed
        this.adicionaPlaylist();
    }//GEN-LAST:event_txtNovaPlaylistActionPerformed

    private void btnAdicionaPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaPlaylistActionPerformed
        this.adicionaPlaylist();
    }//GEN-LAST:event_btnAdicionaPlaylistActionPerformed

    private void btnExcluirPlaylist(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPlaylist
       this.excluirPlaylist();
    }//GEN-LAST:event_btnExcluirPlaylist

    private void btnAlterar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterar
      
    }//GEN-LAST:event_btnAlterar

    
    private void AlterarPlaylist(){
        
        String nome = txtNovaPlaylist.getText();
        apresentaPlaylists();
        
        Playlist alterar = new Playlist(nome);
        String musica = txtMusicas.getText();
        
        criarConexao();
        
        ManterPlaylist alterarPlay= new ManterPlaylist();      
        alterarPlay.alterar(play, nome, musica);////////////////////
        encerrarConexao();
        
        //Exibir uma mensagem de sucesso
        exibirMensagem("Playlist Alterada com sucesso!");
        
        //Limpar os dados da tela
        limparDados();
        
        //Salva pro BD
        playlists.add(alterar);
    }
    
    
    private void excluirPlaylist(){
        
        String nome = txtNovaPlaylist.getText();
        apresentaPlaylists();
        
        Playlist excluir = new Playlist(nome);
        criarConexao();
        
        ManterPlaylist excluirPlay = new ManterPlaylist();      
        excluirPlay.excluirPlaylist(play, nome);
        encerrarConexao();
        
        //Exibir uma mensagem de sucesso
        exibirMensagem("Playlist ExcluÃ­da com sucesso!");
        
        //Limpar os dados da tela
        limparDados();
        
        //Salva pro BD
        playlists.add(excluir);
    }
    
    
    
    private void adicionaPlaylist(){
        //ValidaÃ§Ã£o
        if(!validarCampos()){
            exibirMensagem("A playlist precisa de um nome.");
            return;
        }
        String nome = txtNovaPlaylist.getText();
        String musica = txtMusicas.getText();
        apresentaPlaylists();
        
        //Criar Playlist
        Playlist novaPlaylist = new Playlist(nome);
        criarConexao(); 
        
        ManterPlaylist manter = new ManterPlaylist();
        manter.inserir(play, nome, codigo);
        encerrarConexao();
         
        //Exibir uma mensagem de sucesso
        exibirMensagem("Playlist cadastrado com sucesso!");
        
        //Salva pro BD
        playlists.add(novaPlaylist);
        
        //Limpar os dados da tela
        limparDados();
    }
    
        
     public static void criarConexao() {	
        ConexaoBancoDados conexao = new ConexaoBancoDados();
        try {
               play= conexao.getConexaoAcesso();
        }catch (Exception e) {
                System.out.println("Erro ao conectar o banco de dados: " + e.getMessage());
        }
    }
    public static void encerrarConexao() {
        ConexaoBancoDados conexao = new ConexaoBancoDados();
            try {
                    play = conexao.close();
                    System.out.println("ConexÃ£o com o Banco foi encerrada.....");
            }catch (Exception e) {
                    System.out.println("Erro ao fechar a conexÃ£o: " + e.getMessage());
            }	
    }
    private void limparDados(){
        txtNovaPlaylist.setText("");
    }
    
    private void exibirMensagem(String msg){
        JOptionPane.showMessageDialog(null, msg);
    }
    
    public boolean validarCampos(){
        if(txtNovaPlaylist.getText().isEmpty())
            return false;
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPlaylists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPlaylists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPlaylists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPlaylists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPlaylists(codigo).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbPlaylists;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtMusicas;
    private javax.swing.JTextField txtNovaPlaylist;
    private javax.swing.JTextArea txtPlaylist;
    // End of variables declaration//GEN-END:variables

    @Override
    public void aoReceber(String chaveDeEvento) {
        apresentaPlaylists();
    }
}
